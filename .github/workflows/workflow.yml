name: PR Comment and Diff Check

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
  issue_comment:
    types:
      - created
      - edited

jobs:
  check-comments-and-diff:
    if: github.event.pull_request != null || github.event.issue.pull_request != null
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Check for comments
      id: check-comments
      run: |
        PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}"
        PR_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
        COMMENTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $PR_URL)
        echo "$COMMENTS" > comments.json
        cat comments.json
        COMMENT_EXISTS=$(echo "$COMMENTS" | jq '. | length > 0')
        echo "comment_exists=$COMMENT_EXISTS" >> $GITHUB_ENV

        if [ "$COMMENT_EXISTS" == "true" ]; then
          # COMMENT_BODY=$(echo "$COMMENTS" | jq -r '.[] | select(.body | contains("項目が追加されました。")) | .body' | tail -n 1 | sed 's/\\r\\n/\n/g; s/\\n/\n/g')
          FOUND_COMMENT=false
          for comment in $(echo "$COMMENTS" | jq -r '.[] | @base64'); do
            _jq() {
              echo "${comment}" | base64 --decode | jq -r "${1}"
            }
            COMMENT_BODY=$(_jq '.body')
            echo "Checking comment body: $COMMENT_BODY"
          echo "Latest relevant comment body: $COMMENT_BODY"
          if [ -n "$COMMENT_BODY" ]; then
            MASK_NOT_NEEDED=$(echo "$COMMENT_BODY" | awk '/- \[x\] マスク不要/ {print "found"}' | wc -l)
            MASK_REGISTERED=$(echo "$COMMENT_BODY" | awk '/- \[x\] マスク対象登録完了/ {print "found"}' | wc -l)
            echo "MASK_NOT_NEEDED count: $MASK_NOT_NEEDED"
            echo "MASK_REGISTERED count: $MASK_REGISTERED"
            if [ "$MASK_NOT_NEEDED" -gt 0 ] || [ "$MASK_REGISTERED" -gt 0 ]; then
              echo "mask_complete=1" >> $GITHUB_ENV
              echo "mask_complete is set to 1"
            else
              echo "どちらにもチェックがついていません"
              echo "mask_complete=0" >> $GITHUB_ENV
              echo "mask_complete is set to 0"
              exit 1
            fi
          else
            echo "対象コメントが見つかりませんでした"
            echo "mask_complete=0" >> $GITHUB_ENV
            echo "mask_complete is set to 0"
          fi
        else
          echo "コメントが存在しません"
          echo "mask_complete=0" >> $GITHUB_ENV
          echo "mask_complete is set to 0"
        fi

    - name: Compare files if no comments or incomplete mask comments
      id: compare-no-comments
      if: env.comment_exists == 'false' || (env.comment_exists == 'true' && env.mask_complete == '0')
      run: |
        echo "Comparing files because comment_exists is ${{ env.comment_exists }} and mask_complete is ${{ env.mask_complete }}"
        if ! diff sample_1.py sample_2.py > /dev/null; then
          echo "diff_exists=true" >> $GITHUB_ENV
        else
          echo "diff_exists=false" >> $GITHUB_ENV
        fi

    - name: Comment and fail if diff exists and no comments or incomplete mask comments
      if: (env.comment_exists == 'false' || (env.comment_exists == 'true' && env.mask_complete == 0)) && env.diff_exists == 'true'
      run: |
        echo "Commenting and failing because comment_exists is ${{ env.comment_exists }}, mask_complete is ${{ env.mask_complete }}, and diff_exists is ${{ env.diff_exists }}"
        PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}"
        COMMENT_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"body": "項目が追加されました。\n- [ ] マスク不要\n- [ ] マスク対象登録完了"}' $COMMENT_URL
        exit 1

    - name: Exit successfully if mask complete
      if: env.mask_complete == 1
      
      run: |
        echo "Exiting successfully because mask_complete is ${{ env.mask_complete }}"
        exit 0
